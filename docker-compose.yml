services:
  nginx:
    container_name: bedrock-nginx
    build:
      context: ./nginx
      dockerfile: ../dockerfile/nginx.Dockerfile
      args:
        WP_HOME: ${WP_HOME}
        SUBDOMAIN_SUFFIX: ${SUBDOMAIN_SUFFIX}
        MINIO_URL: ${MINIO_URL}
        MINIO_PROXY: ${MINIO_PROXY}
        MINIO_BUCKET: ${MINIO_BUCKET}
        LOG_ROTATE_INTERVAL: ${LOG_ROTATE_INTERVAL}
        LOG_ROTATE_COUNT: ${LOG_ROTATE_COUNT}
        LOG_ROTATE_COMPRESS: ${LOG_ROTATE_COMPRESS}
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./web:/var/www/web
      - ./config:/var/www/config
      - ./vendor:/var/www/vendor
      - ./logs:/var/www/log
    depends_on:
      - php-fpm
    networks:
      - app-network

  php-fpm:
    image: php:8.1-fpm
    container_name: bedrock-php-fpm
    restart: ${RESTART_POLICY:-unless-stopped}
    build:
      context: ./dockerfile
      dockerfile: php.Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./.env:/var/www/.env
      - ./web:/var/www/web:rw
      - ./config:/var/www/config
      - ./vendor:/var/www/vendor
      - ./logs:/var/www/log
      - ./wp-cli.yml:/var/www/wp-cli.yml
      - ./config/php.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - mariadb
    networks:
      - app-network
    extra_hosts:
      - wsl-host:${WSL_HOST:-127.0.0.1}

  mariadb:
    image: mariadb
    container_name: bedrock-mariadb
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d # SQL files to be processed on build
      - db_data:/var/lib/mysql # Persistent volume for MariaDB data
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: bedrock-phpmyadmin
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${PHPMA_PORT}:80"
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: ${DB_USER} # Remove these to password protect PMA
      PMA_PASSWORD: ${DB_PASSWORD} # Remove these to password protect PMA
    depends_on:
      - mariadb
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: bedrock-mailhog
    restart: ${RESTART_POLICY:-unless-stopped}
    ports:
      - "${MAILHOG_GUI}:8025" # Web UI
    environment:
      MH_USER: ${DB_USER}
      MH_PASS: ${DB_PASSWORD}
      MH_AUTH: "/tmp/mh_auth.txt" # This cannot be MH_AUTH_FILE
      MH_SMTP: ${MAILHOG_SMTP:-1025} # SMTP
    entrypoint: >
        sh -c '
        exec MailHog -smtp-bind-addr=0.0.0.0:$(grep -e ^MH_SMTP= /proc/self/environ | cut -d= -f2) &
        while true; do
          if test -s "$(grep -e ^MH_AUTH= /proc/self/environ | cut -d= -f2)"; then
            echo "[ENTRYPOINT] Auth file detected, restarting MailHog with authentication..."
            pkill MailHog && MH_AUTH_FILE=$(grep -e ^MH_AUTH= /proc/self/environ | cut -d= -f2) \
            exec MailHog -smtp-bind-addr=0.0.0.0:$(grep -e ^MH_SMTP= /proc/self/environ | cut -d= -f2)
            break
          fi
          sleep 10
        done'
    networks:
      - app-network

  minio:
    image: minio/minio
    restart: unless-stopped
    container_name: bedrock-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_GUI}:9001
    networks:
      - app-network

volumes:
  db_data:
  minio_data:

networks:
  app-network:
